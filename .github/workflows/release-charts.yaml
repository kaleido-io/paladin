name: Helm Chart release

permissions:
  contents: write
  packages: write
  id-token: write

on:
  workflow_call:
    inputs:
      latest:
        required: false
        type: boolean
        default: false
      registry:
        required: true
        type: string 
      images_tag:
        required: true
        type: string
        description: 'The images tags to patch the chart with'
      chart_tag:
        required: true
        type: string
        description: 'Chart release tag'
    secrets:
      CR_TOKEN:
        description: 'The GitHub token to use for the helm chart release'
        required: true

  workflow_dispatch:
    inputs:
      latest:
        required: false
        type: boolean
        default: false
      registry:
        type: choice
        options:
          - 'docker.io'
          - 'ghcr.io'
        default: 'docker.io'
        description: 'The docker registry to use for the images'
      images_tag:
        required: true
        type: string
        description: 'The images tags to patch the chart with'
      chart_tag:
        required: true
        type: string
        description: 'The helm chart tag to release the chart'
  
jobs:
  helm-chart-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install pre-requisites
        uses: ./.github/actions/setup

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      
      - uses: imranismail/setup-kustomize@v2

      - name: Prepare CRD chart
        run: ./gradlew prepareCRDsChart

      - name: Prepare operator chart
        run: ./gradlew prepareOperatorChart

      - name: Get Docker Repository Name
        id: docker_repo
        uses: ./.github/actions/repository
        with:
          repository: ${{ github.repository_owner }}
          registry: ${{ inputs.registry }}
      
      - name: Finalize image names
        shell: bash
        run: |
          echo "IMG_PALADIN=${{ inputs.registry }}/${{ steps.docker_repo.outputs.repository }}/paladin" >> $GITHUB_ENV
          echo "IMG_OPERATOR=${{ inputs.registry }}/${{ steps.docker_repo.outputs.repository }}/paladin-operator" >> $GITHUB_ENV
      
      - name: Override image tags
        uses: ./.github/actions/update-yaml
        with:
          file: 'operator/charts/paladin-operator/values.yaml'
          updates: |
            operator:
              image:
                repository: ${{ env.IMG_OPERATOR }}
                tag: ${{ inputs.images_tag }}
            paladin:
              image:
                repository: ${{ env.IMG_PALADIN }}
                tag: ${{ inputs.images_tag }}
      
      # Remove 'v' prefix from the tag
      - name: Process Tag
        shell: bash
        run: |
          TAG="${{ inputs.chart_tag }}"
          PROCESSED_TAG="${TAG#v}"
          echo "PROCESSED_TAG=${PROCESSED_TAG}" >> $GITHUB_ENV

      # Override the chart version in the Chart.yaml file
      - name: Override chart version
        uses: ./.github/actions/update-yaml
        with:
          file: 'operator/charts/paladin-operator/Chart.yaml'
          updates: |
            version: ${{ env.PROCESSED_TAG }}
            appVersion: ${{ inputs.chart_tag }}

      - name: Confirm Helm templates
        working-directory: operator/charts/paladin-operator
        run: |
          helm dependency build
          helm template .
          rm -rf charts
          rm Chart.lock

      # e2e tests 
      - name: E2E Test
        run: |
          ./gradlew e2e \
            -PloadImages=false \
            -PbuildOperator=false \
            -PbuildPaladin=false \
            -PoperatorImageName=${{ env.IMG_OPERATOR }} \
            -PoperatorImageTag=${{ inputs.images_tag }} \
            -PpaladinImageName=${{ env.IMG_PALADIN }} \
            -PpaladinImageTag=${{ inputs.images_tag }} \
            -PdeleteCluster=false

      # set CR_TOKEN env with the GitHub token secret when it is workflow_dispatch action
      - name: Set CR_TOKEN
        shell: bash
        run: |
          if [ "${{ github.event_name }}" == 'workflow_call' ]; then
            echo "CR_TOKEN=${{ secrets.CR_TOKEN }}" >> $GITHUB_ENV
          else
            echo "CR_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          fi

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          mark_as_latest: false # the release job is marked as latest
          charts_dir: "operator/charts"
          skip_existing: true
        env: 
          CR_TOKEN: "${{ env.CR_TOKEN }}"

      - name: Prepare CRs artifacts
        run: ./gradlew prepareArtifacts -PartifactDir=${{ github.workspace }}/artifacts
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: helm-artifacts
          path: |
              ${{ github.workspace }}/artifacts/basenet.yaml
              ${{ github.workspace }}/artifacts/devnet.yaml
              ${{ github.workspace }}/artifacts/attach.yaml
              ${{ github.workspace }}/artifacts/customnet.yaml
              ${{ github.workspace }}/artifacts/artifacts.tar.gz
 