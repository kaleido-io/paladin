// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package metrics

import (
	"github.com/prometheus/client_golang/prometheus"
	mock "github.com/stretchr/testify/mock"
)

// NewMockMetrics creates a new instance of MockMetrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMetrics {
	mock := &MockMetrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockMetrics is an autogenerated mock type for the Metrics type
type MockMetrics struct {
	mock.Mock
}

type MockMetrics_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMetrics) EXPECT() *MockMetrics_Expecter {
	return &MockMetrics_Expecter{mock: &_m.Mock}
}

// Registry provides a mock function for the type MockMetrics
func (_mock *MockMetrics) Registry() *prometheus.Registry {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for Registry")
	}

	var r0 *prometheus.Registry
	if returnFunc, ok := ret.Get(0).(func() *prometheus.Registry); ok {
		r0 = returnFunc()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*prometheus.Registry)
		}
	}
	return r0
}

// MockMetrics_Registry_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Registry'
type MockMetrics_Registry_Call struct {
	*mock.Call
}

// Registry is a helper method to define mock.On call
func (_e *MockMetrics_Expecter) Registry() *MockMetrics_Registry_Call {
	return &MockMetrics_Registry_Call{Call: _e.mock.On("Registry")}
}

func (_c *MockMetrics_Registry_Call) Run(run func()) *MockMetrics_Registry_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockMetrics_Registry_Call) Return(registry *prometheus.Registry) *MockMetrics_Registry_Call {
	_c.Call.Return(registry)
	return _c
}

func (_c *MockMetrics_Registry_Call) RunAndReturn(run func() *prometheus.Registry) *MockMetrics_Registry_Call {
	_c.Call.Return(run)
	return _c
}
