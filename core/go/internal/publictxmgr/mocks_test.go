// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package publictxmgr

import (
	"context"

	"github.com/LF-Decentralized-Trust-labs/paladin/sdk/go/pkg/pldtypes"
	mock "github.com/stretchr/testify/mock"
)

// NewMockInFlightStageActionTriggers creates a new instance of MockInFlightStageActionTriggers. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockInFlightStageActionTriggers(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockInFlightStageActionTriggers {
	mock := &MockInFlightStageActionTriggers{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockInFlightStageActionTriggers is an autogenerated mock type for the InFlightStageActionTriggers type
type MockInFlightStageActionTriggers struct {
	mock.Mock
}

type MockInFlightStageActionTriggers_Expecter struct {
	mock *mock.Mock
}

func (_m *MockInFlightStageActionTriggers) EXPECT() *MockInFlightStageActionTriggers_Expecter {
	return &MockInFlightStageActionTriggers_Expecter{mock: &_m.Mock}
}

// TriggerRetrieveGasPrice provides a mock function for the type MockInFlightStageActionTriggers
func (_mock *MockInFlightStageActionTriggers) TriggerRetrieveGasPrice(ctx context.Context) error {
	ret := _mock.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for TriggerRetrieveGasPrice")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = returnFunc(ctx)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// MockInFlightStageActionTriggers_TriggerRetrieveGasPrice_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TriggerRetrieveGasPrice'
type MockInFlightStageActionTriggers_TriggerRetrieveGasPrice_Call struct {
	*mock.Call
}

// TriggerRetrieveGasPrice is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockInFlightStageActionTriggers_Expecter) TriggerRetrieveGasPrice(ctx interface{}) *MockInFlightStageActionTriggers_TriggerRetrieveGasPrice_Call {
	return &MockInFlightStageActionTriggers_TriggerRetrieveGasPrice_Call{Call: _e.mock.On("TriggerRetrieveGasPrice", ctx)}
}

func (_c *MockInFlightStageActionTriggers_TriggerRetrieveGasPrice_Call) Run(run func(ctx context.Context)) *MockInFlightStageActionTriggers_TriggerRetrieveGasPrice_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 context.Context
		if args[0] != nil {
			arg0 = args[0].(context.Context)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockInFlightStageActionTriggers_TriggerRetrieveGasPrice_Call) Return(err error) *MockInFlightStageActionTriggers_TriggerRetrieveGasPrice_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockInFlightStageActionTriggers_TriggerRetrieveGasPrice_Call) RunAndReturn(run func(ctx context.Context) error) *MockInFlightStageActionTriggers_TriggerRetrieveGasPrice_Call {
	_c.Call.Return(run)
	return _c
}

// TriggerSignTx provides a mock function for the type MockInFlightStageActionTriggers
func (_mock *MockInFlightStageActionTriggers) TriggerSignTx(ctx context.Context) error {
	ret := _mock.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for TriggerSignTx")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = returnFunc(ctx)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// MockInFlightStageActionTriggers_TriggerSignTx_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TriggerSignTx'
type MockInFlightStageActionTriggers_TriggerSignTx_Call struct {
	*mock.Call
}

// TriggerSignTx is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockInFlightStageActionTriggers_Expecter) TriggerSignTx(ctx interface{}) *MockInFlightStageActionTriggers_TriggerSignTx_Call {
	return &MockInFlightStageActionTriggers_TriggerSignTx_Call{Call: _e.mock.On("TriggerSignTx", ctx)}
}

func (_c *MockInFlightStageActionTriggers_TriggerSignTx_Call) Run(run func(ctx context.Context)) *MockInFlightStageActionTriggers_TriggerSignTx_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 context.Context
		if args[0] != nil {
			arg0 = args[0].(context.Context)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockInFlightStageActionTriggers_TriggerSignTx_Call) Return(err error) *MockInFlightStageActionTriggers_TriggerSignTx_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockInFlightStageActionTriggers_TriggerSignTx_Call) RunAndReturn(run func(ctx context.Context) error) *MockInFlightStageActionTriggers_TriggerSignTx_Call {
	_c.Call.Return(run)
	return _c
}

// TriggerStatusUpdate provides a mock function for the type MockInFlightStageActionTriggers
func (_mock *MockInFlightStageActionTriggers) TriggerStatusUpdate(ctx context.Context) error {
	ret := _mock.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for TriggerStatusUpdate")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = returnFunc(ctx)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// MockInFlightStageActionTriggers_TriggerStatusUpdate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TriggerStatusUpdate'
type MockInFlightStageActionTriggers_TriggerStatusUpdate_Call struct {
	*mock.Call
}

// TriggerStatusUpdate is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockInFlightStageActionTriggers_Expecter) TriggerStatusUpdate(ctx interface{}) *MockInFlightStageActionTriggers_TriggerStatusUpdate_Call {
	return &MockInFlightStageActionTriggers_TriggerStatusUpdate_Call{Call: _e.mock.On("TriggerStatusUpdate", ctx)}
}

func (_c *MockInFlightStageActionTriggers_TriggerStatusUpdate_Call) Run(run func(ctx context.Context)) *MockInFlightStageActionTriggers_TriggerStatusUpdate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 context.Context
		if args[0] != nil {
			arg0 = args[0].(context.Context)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockInFlightStageActionTriggers_TriggerStatusUpdate_Call) Return(err error) *MockInFlightStageActionTriggers_TriggerStatusUpdate_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockInFlightStageActionTriggers_TriggerStatusUpdate_Call) RunAndReturn(run func(ctx context.Context) error) *MockInFlightStageActionTriggers_TriggerStatusUpdate_Call {
	_c.Call.Return(run)
	return _c
}

// TriggerSubmitTx provides a mock function for the type MockInFlightStageActionTriggers
func (_mock *MockInFlightStageActionTriggers) TriggerSubmitTx(ctx context.Context, signedMessage []byte, calculatedTxHash *pldtypes.Bytes32) error {
	ret := _mock.Called(ctx, signedMessage, calculatedTxHash)

	if len(ret) == 0 {
		panic("no return value specified for TriggerSubmitTx")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(context.Context, []byte, *pldtypes.Bytes32) error); ok {
		r0 = returnFunc(ctx, signedMessage, calculatedTxHash)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// MockInFlightStageActionTriggers_TriggerSubmitTx_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TriggerSubmitTx'
type MockInFlightStageActionTriggers_TriggerSubmitTx_Call struct {
	*mock.Call
}

// TriggerSubmitTx is a helper method to define mock.On call
//   - ctx context.Context
//   - signedMessage []byte
//   - calculatedTxHash *pldtypes.Bytes32
func (_e *MockInFlightStageActionTriggers_Expecter) TriggerSubmitTx(ctx interface{}, signedMessage interface{}, calculatedTxHash interface{}) *MockInFlightStageActionTriggers_TriggerSubmitTx_Call {
	return &MockInFlightStageActionTriggers_TriggerSubmitTx_Call{Call: _e.mock.On("TriggerSubmitTx", ctx, signedMessage, calculatedTxHash)}
}

func (_c *MockInFlightStageActionTriggers_TriggerSubmitTx_Call) Run(run func(ctx context.Context, signedMessage []byte, calculatedTxHash *pldtypes.Bytes32)) *MockInFlightStageActionTriggers_TriggerSubmitTx_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 context.Context
		if args[0] != nil {
			arg0 = args[0].(context.Context)
		}
		var arg1 []byte
		if args[1] != nil {
			arg1 = args[1].([]byte)
		}
		var arg2 *pldtypes.Bytes32
		if args[2] != nil {
			arg2 = args[2].(*pldtypes.Bytes32)
		}
		run(
			arg0,
			arg1,
			arg2,
		)
	})
	return _c
}

func (_c *MockInFlightStageActionTriggers_TriggerSubmitTx_Call) Return(err error) *MockInFlightStageActionTriggers_TriggerSubmitTx_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockInFlightStageActionTriggers_TriggerSubmitTx_Call) RunAndReturn(run func(ctx context.Context, signedMessage []byte, calculatedTxHash *pldtypes.Bytes32) error) *MockInFlightStageActionTriggers_TriggerSubmitTx_Call {
	_c.Call.Return(run)
	return _c
}
